/*
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
 \ Empresa.: PresServ Inform tica - Limeira (019)452.6623
 \ Programa: CON_R001.PRG
 \ Data....: 03-05-98
 \ Sistema.: Controle de Convˆnios
 \ Funcao..: Emiss„o Guias Modelo 1
 \ Analista: Ademilson Pedro Bom
 \ Criacao.: GAS-Pro v3.0
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
*/

#include "ADRbig.ch"    // inicializa constantes manifestas

LOCAL dele_atu, getlist:={}, so_um_reg, sit_dbf:=POINTER_DBF()
PARA  lin_menu, col_menu, imp_reg
PRIV  tem_borda:=.t., op_menu:=VAR_COMPL, l_s:=11, c_s:=20, l_i:=14, c_i:=61, tela_fundo:=SAVESCREEN(0,0,MAXROW(),79)
nucop=1
so_um_reg=(PCOU()>2)
IF !so_um_reg                             // vai receber a variaveis?
 SETCOLOR(drvtittel)
 vr_memo=NOVAPOSI(@l_s,@c_s,@l_i,@c_i)    // pega posicao atual da tela
 CAIXA(mold,l_s,c_s,l_i,c_i)              // monta caixa da tela
 @ l_s,c_s+12 SAY " EMISSŽO DE GUIAS "
 SETCOLOR(drvcortel)
 @ l_s+01,c_s+1 SAY " N£mero:"
ENDI
gnumero=SPAC(7)                                    // N£mero
DO WHILE .t.
 rola_t=.f.
 cod_sos=56
 IF !so_um_reg
  SET KEY K_ALT_F8 TO ROLATELA
  SETCOLOR(drvcortel+","+drvcorget+",,,"+corcampo)
  @ l_s+01 ,c_s+10 GET  gnumero;
                   PICT "@R 99-99999";
                   VALI CRIT("PTAB(gnumero,'GUIAS',1).AND.V00101F9()~N£MERO n„o existe na tabela")
                   DEFAULT "M->pnumero"
                   AJUDA "Emitir a guia de n£mero?"
                   CMDF8 "VDBF(6,8,20,77,'GUIAS',{'numero','grupo','codigo','grau','seq','nome'},1,'numero')"
                   MOSTRA {"LEFT(TRAN(GUIAS->nome,[@!]),35)", 2 , 5 }

  READ
  SET KEY K_ALT_F8 TO
  IF rola_t
   ROLATELA(.f.)
   LOOP
  ENDI
  IF LASTKEY()=K_ESC                               // se quer cancelar
   RETU                                            // retorna
  ENDI
 ENDI

 #ifdef COM_REDE
  IF !USEARQ("GUIAS",.f.,10,1)                     // se falhou a abertura do arq
   RETU                                            // volta ao menu anterior
  ENDI
 #else
  USEARQ("GUIAS")                                  // abre o dbf e seus indices
 #endi

 PTAB(medico,"MEDICOS",1,.t.)                      // abre arquivo p/ o relacionamento
 SET RELA TO medico INTO MEDICOS                   // relacionamento dos arquivos
 titrel:=criterio:=cpord := ""                     // inicializa variaveis
 titrel:=chv_rela:=chv_1:=chv_2 := ""
 tps:=op_x:=ccop := 1
 arq_=drvporta                                     // porta de saida configurada
 IF !so_um_reg
  IF !opcoes_rel(lin_menu,col_menu,5,11)           // nao quis configurar...
   CLOS ALL                                        // fecha arquivos e
   LOOP                                            // volta ao menu
  ENDI

 #ifdef COM_REDE

  ELSE

   tps=lin_menu

 #endi

 ENDI
 IF tps=2                                          // se vai para arquivo/video
  arq_=ARQGER()                                    // entao pega nome do arquivo
  IF EMPTY(arq_)                                   // se cancelou ou nao informou
   LOOP                                            // retorna
  ENDI
 ELSE
  arq_=drvporta                                    // porta de saida configurada
 ENDI
 SET PRINTER TO (arq_)                             // redireciona saida
 EXIT
ENDD
IF !EMPTY(drvtapg)                                 // existe configuracao de tam pag?
 op_=AT("NNN",drvtapg)                             // se o codigo que altera
 IF op_=0                                          // o tamanho da pagina
  msg="Configura‡„o do tamanho da p gina!"         // foi informado errado
  DBOX(msg,,,,,"ERRO!")                            // avisa
  CLOSE ALL                                        // fecha todos arquivos abertos
  RETU                                             // e cai fora...
 ENDI                                              // codigo para setar/resetar tam pag
 lpp_024=LEFT(drvtapg,op_-1)+"024"+SUBS(drvtapg,op_+3)
 lpp_066=LEFT(drvtapg,op_-1)+"066"+SUBS(drvtapg,op_+3)
ELSE
 lpp_024:=lpp_066 :=""                             // nao ira mudara o tamanho da pag
ENDI
DBOX("[ESC] Interrompe",15,,,NAO_APAGA)
dele_atu:=SET(_SET_DELETED,.t.)                    // os excluidos nao servem...
SET DEVI TO PRIN                                   // inicia a impressao
maxli=22                                           // maximo de linhas no relatorio
IMPCTL(lpp_024)                                    // seta pagina com 24 linhas
SET MARG TO 1                                      // ajusta a margem esquerda
IF tps=2
 IMPCTL("' '+CHR(8)")
ENDI
BEGIN SEQUENCE
 DO WHIL ccop<=nucop                               // imprime qde copias pedida
  pg_=1; cl=999
  IF so_um_reg
   GO imp_reg
  ELSE
   INI_ARQ()                                       // acha 1o. reg valido do arquivo
   IF PTAB(PADR(SUBSTR(M->ide_maq,2),4)+[GUI],[IMPPAR],1)
    SEEK ALLTRIM(IMPPAR->docto)
   ENDI
  ENDI
  ccop++                                           // incrementa contador de copias
  DO WHIL !EOF().AND.(!so_um_reg.OR.imp_reg=RECN())
   #ifdef COM_TUTOR
    IF IN_KEY()=K_ESC                              // se quer cancelar
   #else
    IF INKEY()=K_ESC                               // se quer cancelar
   #endi
    IF canc()                                      // pede confirmacao
     BREAK                                         // confirmou...
    ENDI
   ENDI
   IF (PTAB(PADR(SUBSTR(M->ide_maq,2),4)+[GUI],[IMPPAR],1).and.LEFT(IMPPAR->docto,7)=ano+numero) .OR. so_um_reg// se atender a condicao...
    REL_CAB(2)                                     // soma cl/imprime cabecalho
    @ cl,066 SAY TRAN(numero,"99999")              // N£mero
    REL_CAB(3)                                     // soma cl/imprime cabecalho
    IMPCTL(drvpenf)
    @ cl,008 SAY MEDICOS->nome                     // Nome M‚dico
    IMPCTL(drvtenf)
    @ cl,063 SAY TRAN(medico,"@!")                 // M‚dico Codigo
    REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,008 SAY ALLTRIM(MEDICOS->endereco)+[ Tel.:]+MEDICOS->telefone // Endere‡o
		REL_CAB(1)                                     // soma cl/imprime cabecalho
		@ cl,008 SAY TRAN(MEDICOS->cidade,"@!")        // Cidade
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		IF !EMPT(MEDICOS->mensagem)
		 @ cl,008 SAY TRAN(MEDICOS->mensagem,"@!")      // Mensagem
		ELSE
		 IF MEDICOS->valorpart > 0
			@ cl,008 SAY TRAN(MEDICOS->valorpart,"@E 99,999,999.99")// Valor Particular
		 ENDI
		 IF MEDICOS->porcent1 > 0
			@ cl,027 SAY TRAN(MEDICOS->porcent1,"99")      // Porcent1
		 ENDI
		 IF MEDICOS->ultvalor > 0
			@ cl,035 SAY TRAN(MEDICOS->valorpart-MEDICOS->ultvalor,"@E 99,999,999.99")// Valor Particular
			@ cl,058 SAY TRAN(MEDICOS->ultvalor,"@E 99,999,999.99")// Ult.valor
		 ENDI
		ENDI

		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,008 SAY TRAN(titular,"@!")                // Titular
		@ cl,062 SAY TRAN(contrato,"999999")           // N§ Contrato
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,008 SAY TRAN(nome,"@!")                   // Nome
		@ cl,051 SAY TRAN(emissao_,"@D")               // Emiss„o
		@ cl,062 SAY TRAN(emissao_+VAL(MEDICOS->tipcont),"@D")            // validade
    SKIP                                           // pega proximo registro
    cl=999                                         // forca salto de pagina
   ELSE                                            // se nao atende condicao
    SKIP                                           // pega proximo registro
   ENDI
   exit
  ENDD
 ENDD ccop
 EJEC                                              // salta pagina
END SEQUENCE
SET MARG TO                                        // coloca margem esquerda = 0
IMPCTL(lpp_066)                                    // seta pagina com 66 linhas
SET PRINTER TO (drvporta)                          // fecha arquivo gerado (se houver)
SET DEVI TO SCRE                                   // direciona saida p/ video
IF tps=2                                           // se vai para arquivo/video
 BROWSE_REL(arq_,2,3,MAXROW()-2,78)
ENDI                                               // mostra o arquivo gravado
GRELA(5)                                           // grava variacao do relatorio
SELE GUIAS                                         // salta pagina
SET RELA TO                                        // retira os relacionamentos
SET(_SET_DELETED,dele_atu)                         // os excluidos serao vistos
IF so_um_reg
 POINTER_DBF(sit_dbf)
ENDI
RETU

STATIC PROC REL_CAB(qt)                            // cabecalho do relatorio
IF qt>0                                            // se parametro maior que 0
 cl=cl+qt                                          // soma no contador de linhas
ENDI
IF cl>maxli .OR. qt=0                              // quebra de pagina
 cl=qt+2 ; pg_++
ENDI
RETU

* \\ Final de CON_R001.PRG
